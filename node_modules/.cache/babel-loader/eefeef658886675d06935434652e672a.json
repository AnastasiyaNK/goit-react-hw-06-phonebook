{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst INITIAL_STATE = {\n  contacts: [],\n  filter: ''\n};\nconst phoneBookSlice = createSlice({\n  name: 'phoneBook',\n  initialState: INITIAL_STATE,\n  reducers: {\n    addContact(state, action) {\n      state.contacts = [...state.contacts, action.payload];\n    },\n\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(contact => contact.id !== action.payload);\n    },\n\n    setfilter(state, action) {\n      state.filter = action.payload;\n    },\n\n    toggleFavoriteContact(state, action) {\n      state.contacts = state.contacts.map(contact => {\n        if (contact.id === action.payload) {\n          return { ...contact,\n            favourite: !contact.favourite\n          };\n        }\n\n        return contact;\n      });\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  setfilter,\n  toggleFavoriteContact\n} = phoneBookSlice.actions;\nexport const phoneBookReducer = phoneBookSlice.reducer;","map":{"version":3,"sources":["/Users/anastasyatsoka/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/phoneBookSlice.js"],"names":["createSlice","INITIAL_STATE","contacts","filter","phoneBookSlice","name","initialState","reducers","addContact","state","action","payload","deleteContact","contact","id","setfilter","toggleFavoriteContact","map","favourite","actions","phoneBookReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAtB;AAKA,MAAMC,cAAc,GAAGJ,WAAW,CAAC;AACjCK,EAAAA,IAAI,EAAE,WAD2B;AAEjCC,EAAAA,YAAY,EAAEL,aAFmB;AAGjCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACP,QAAN,GAAiB,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBQ,MAAM,CAACC,OAA3B,CAAjB;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC3BD,MAAAA,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACP,QAAN,CAAeC,MAAf,CACfU,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OADlB,CAAjB;AAGD,KARO;;AASRI,IAAAA,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACD,KAXO;;AAYRK,IAAAA,qBAAqB,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACnCD,MAAAA,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACP,QAAN,CAAee,GAAf,CAAmBJ,OAAO,IAAI;AAC7C,YAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA1B,EAAmC;AACjC,iBAAO,EAAE,GAAGE,OAAL;AAAcK,YAAAA,SAAS,EAAE,CAACL,OAAO,CAACK;AAAlC,WAAP;AACD;;AACD,eAAOL,OAAP;AACD,OALgB,CAAjB;AAMD;;AAnBO;AAHuB,CAAD,CAAlC;AA0BA,OAAO,MAAM;AAAEL,EAAAA,UAAF;AAAcI,EAAAA,aAAd;AAA6BG,EAAAA,SAA7B;AAAwCC,EAAAA;AAAxC,IACXZ,cAAc,CAACe,OADV;AAGP,OAAO,MAAMC,gBAAgB,GAAGhB,cAAc,CAACiB,OAAxC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_STATE = {\n  contacts: [],\n  filter: '',\n};\n\nconst phoneBookSlice = createSlice({\n  name: 'phoneBook',\n  initialState: INITIAL_STATE,\n  reducers: {\n    addContact(state, action) {\n      state.contacts = [...state.contacts, action.payload];\n    },\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(\n        contact => contact.id !== action.payload\n      );\n    },\n    setfilter(state, action) {\n      state.filter = action.payload;\n    },\n    toggleFavoriteContact(state, action) {\n      state.contacts = state.contacts.map(contact => {\n        if (contact.id === action.payload) {\n          return { ...contact, favourite: !contact.favourite };\n        }\n        return contact;\n      });\n    },\n  },\n});\n\nexport const { addContact, deleteContact, setfilter, toggleFavoriteContact } =\n  phoneBookSlice.actions;\n\nexport const phoneBookReducer = phoneBookSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}