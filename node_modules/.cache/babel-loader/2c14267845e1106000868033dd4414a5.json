{"ast":null,"code":"var _jsxFileName = \"/Users/anastasyatsoka/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport css from './App.module.css';\nimport { ContactList } from './ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const contacts = useSelector(state => state.phoneBook.contacts);\n  const filter = useSelector(state => state.phoneBook.filter);\n  useEffect(() => {\n    const stringifiedContacts = JSON.stringify(contacts);\n    localStorage.setItem('contacts', stringifiedContacts);\n  }, [contacts]);\n\n  const handleAddContact = formData => {\n    const isInContact = contacts.some(contact => contact.name.toLowerCase() === formData.name);\n\n    if (isInContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: formData.name,\n      number: formData.number,\n      id: nanoid(),\n      favourite: false\n    }; // setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleDeleteContact = contactId => {// setContacts(prevState =>\n    //   prevState.filter(contact => contact.id !== contactId)\n    // );\n  };\n\n  const handleInputChange = event => {// setFilter(event.target.value);\n  };\n\n  const toggleFavorite = contactId => {// [{id: 1, favourite: false}]\n    // setContacts(\n    //   contacts.map(contact => {\n    //     if (contact.id === contactId) {\n    //       return { ...contact, favourite: !contact.favourite };\n    //     }\n    //     return contact;\n    //   })\n    // );\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContactsByName = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.phoneBook,\n    children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n      handleAddContact: handleAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filteredContactsByName,\n      handleDeleteContact: handleDeleteContact,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MhibKg90rotyGCMCAAlkECcP2D8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasyatsoka/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["React","useEffect","useState","css","ContactList","nanoid","ContactForm","Filter","useSelector","App","contacts","state","phoneBook","filter","stringifiedContacts","JSON","stringify","localStorage","setItem","handleAddContact","formData","isInContact","some","contact","name","toLowerCase","alert","newContact","number","id","favourite","handleDeleteContact","contactId","handleInputChange","event","toggleFavorite","getVisibleContacts","includes","filteredContactsByName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,QAA1B,CAA5B;AACA,QAAMG,MAAM,GAAGL,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,MAA1B,CAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,mBAAmB,GAAGC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAA5B;AACAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,mBAAjC;AACD,GAHQ,EAGN,CAACJ,QAAD,CAHM,CAAT;;AAKA,QAAMS,gBAAgB,GAAGC,QAAQ,IAAI;AACnC,UAAMC,WAAW,GAAGX,QAAQ,CAACY,IAAT,CAClBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BL,QAAQ,CAACI,IADjC,CAApB;;AAIA,QAAIH,WAAJ,EAAiB;AACf,aAAOK,KAAK,CAAE,GAAEN,QAAQ,CAACI,IAAK,yBAAlB,CAAZ;AACD;;AAED,UAAMG,UAAU,GAAG;AACjBH,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IADE;AAEjBI,MAAAA,MAAM,EAAER,QAAQ,CAACQ,MAFA;AAGjBC,MAAAA,EAAE,EAAExB,MAAM,EAHO;AAIjByB,MAAAA,SAAS,EAAE;AAJM,KAAnB,CATmC,CAenC;AACD,GAhBD;;AAkBA,QAAMC,mBAAmB,GAAGC,SAAS,IAAI,CACvC;AACA;AACA;AACD,GAJD;;AAMA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI,CACjC;AACD,GAFD;;AAGA,QAAMC,cAAc,GAAGH,SAAS,IAAI,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;;AAYA,QAAMI,kBAAkB,GAAG,MAAM;AAC/B,WAAO1B,QAAQ,CAACG,MAAT,CAAgBU,OAAO,IAC5BA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BY,QAA3B,CAAoCxB,MAAM,CAACY,WAAP,EAApC,CADK,CAAP;AAGD,GAJD;;AAMA,QAAMa,sBAAsB,GAAGF,kBAAkB,EAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEjC,GAAG,CAACS,SAApB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,gBAAgB,EAAEO;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEN,MAAhB;AAAwB,MAAA,iBAAiB,EAAEoB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEK,sBADZ;AAEE,MAAA,mBAAmB,EAAEP,mBAFvB;AAGE,MAAA,cAAc,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArEM;;GAAM1B,G;UACMD,W,EACFA,W;;;KAFJC,G","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport css from './App.module.css';\nimport { ContactList } from './ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { useSelector } from 'react-redux';\n\nexport const App = () => {\n  const contacts = useSelector(state => state.phoneBook.contacts);\n  const filter = useSelector(state => state.phoneBook.filter);\n\n  useEffect(() => {\n    const stringifiedContacts = JSON.stringify(contacts);\n    localStorage.setItem('contacts', stringifiedContacts);\n  }, [contacts]);\n\n  const handleAddContact = formData => {\n    const isInContact = contacts.some(\n      contact => contact.name.toLowerCase() === formData.name\n    );\n\n    if (isInContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: formData.name,\n      number: formData.number,\n      id: nanoid(),\n      favourite: false,\n    };\n    // setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleDeleteContact = contactId => {\n    // setContacts(prevState =>\n    //   prevState.filter(contact => contact.id !== contactId)\n    // );\n  };\n\n  const handleInputChange = event => {\n    // setFilter(event.target.value);\n  };\n  const toggleFavorite = contactId => {\n    // [{id: 1, favourite: false}]\n    // setContacts(\n    //   contacts.map(contact => {\n    //     if (contact.id === contactId) {\n    //       return { ...contact, favourite: !contact.favourite };\n    //     }\n    //     return contact;\n    //   })\n    // );\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContactsByName = getVisibleContacts();\n\n  return (\n    <div className={css.phoneBook}>\n      <ContactForm handleAddContact={handleAddContact} />\n      <h2>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter filter={filter} handleInputChange={handleInputChange} />\n      <ContactList\n        contacts={filteredContactsByName}\n        handleDeleteContact={handleDeleteContact}\n        toggleFavorite={toggleFavorite}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}