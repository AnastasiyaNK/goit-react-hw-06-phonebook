{"ast":null,"code":"var _jsxFileName = \"/Users/anastasyatsoka/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport css from './App.module.css';\nimport { ContactList } from './ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(() => {\n    var _JSON$parse;\n\n    const stringifiedContacts = localStorage.getItem('contacts');\n    const parsedContacts = (_JSON$parse = JSON.parse(stringifiedContacts)) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n    return parsedContacts;\n  });\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const stringifiedContacts = JSON.stringify(contacts);\n    localStorage.setItem('contacts', stringifiedContacts);\n  }, [contacts]);\n\n  const handleAddContact = formData => {\n    const isInContact = contacts.some(contact => contact.name.toLowerCase() === formData.name);\n\n    if (isInContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: formData.name,\n      number: formData.number,\n      id: nanoid(),\n      favourite: false\n    };\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleDeleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId));\n  };\n\n  const handleInputChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const toggleFavorite = contactId => {\n    // [{id: 1, favourite: false}]\n    setContacts(contacts.map(contact => {\n      if (contact.id === contactId) {\n        return { ...contact,\n          favourite: !contact.favourite\n        };\n      }\n\n      return contact;\n    }));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContactsByName = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.phoneBook,\n    children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n      handleAddContact: handleAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filteredContactsByName,\n      handleDeleteContact: handleDeleteContact,\n      toggleFavorite: toggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"a4xUp5jQKDghQ7A73mGkC7P/FBo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasyatsoka/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["React","useEffect","useState","css","ContactList","nanoid","ContactForm","Filter","App","contacts","setContacts","stringifiedContacts","localStorage","getItem","parsedContacts","JSON","parse","filter","setFilter","stringify","setItem","handleAddContact","formData","isInContact","some","contact","name","toLowerCase","alert","newContact","number","id","favourite","prevState","handleDeleteContact","contactId","handleInputChange","event","target","value","toggleFavorite","map","getVisibleContacts","includes","filteredContactsByName","phoneBook"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,MAAM;AAAA;;AAC7C,UAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA5B;AACA,UAAMC,cAAc,kBAAGC,IAAI,CAACC,KAAL,CAAWL,mBAAX,CAAH,qDAAsC,EAA1D;AACA,WAAOG,cAAP;AACD,GAJuC,CAAxC;AAKA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,mBAAmB,GAAGI,IAAI,CAACI,SAAL,CAAeV,QAAf,CAA5B;AACAG,IAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCT,mBAAjC;AACD,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;;AAKA,QAAMY,gBAAgB,GAAGC,QAAQ,IAAI;AACnC,UAAMC,WAAW,GAAGd,QAAQ,CAACe,IAAT,CAClBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BL,QAAQ,CAACI,IADjC,CAApB;;AAIA,QAAIH,WAAJ,EAAiB;AACf,aAAOK,KAAK,CAAE,GAAEN,QAAQ,CAACI,IAAK,yBAAlB,CAAZ;AACD;;AAED,UAAMG,UAAU,GAAG;AACjBH,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IADE;AAEjBI,MAAAA,MAAM,EAAER,QAAQ,CAACQ,MAFA;AAGjBC,MAAAA,EAAE,EAAE1B,MAAM,EAHO;AAIjB2B,MAAAA,SAAS,EAAE;AAJM,KAAnB;AAMAtB,IAAAA,WAAW,CAACuB,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeJ,UAAf,CAAd,CAAX;AACD,GAhBD;;AAkBA,QAAMK,mBAAmB,GAAGC,SAAS,IAAI;AACvCzB,IAAAA,WAAW,CAACuB,SAAS,IACnBA,SAAS,CAAChB,MAAV,CAAiBQ,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeI,SAA3C,CADS,CAAX;AAGD,GAJD;;AAMA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjCnB,IAAAA,SAAS,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAGA,QAAMC,cAAc,GAAGL,SAAS,IAAI;AAClC;AAEAzB,IAAAA,WAAW,CACTD,QAAQ,CAACgC,GAAT,CAAahB,OAAO,IAAI;AACtB,UAAIA,OAAO,CAACM,EAAR,KAAeI,SAAnB,EAA8B;AAC5B,eAAO,EAAE,GAAGV,OAAL;AAAcO,UAAAA,SAAS,EAAE,CAACP,OAAO,CAACO;AAAlC,SAAP;AACD;;AACD,aAAOP,OAAP;AACD,KALD,CADS,CAAX;AAQD,GAXD;;AAaA,QAAMiB,kBAAkB,GAAG,MAAM;AAC/B,WAAOjC,QAAQ,CAACQ,MAAT,CAAgBQ,OAAO,IAC5BA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BgB,QAA3B,CAAoC1B,MAAM,CAACU,WAAP,EAApC,CADK,CAAP;AAGD,GAJD;;AAMA,QAAMiB,sBAAsB,GAAGF,kBAAkB,EAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEvC,GAAG,CAAC0C,SAApB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,gBAAgB,EAAExB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEJ,MAAhB;AAAwB,MAAA,iBAAiB,EAAEmB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEQ,sBADZ;AAEE,MAAA,mBAAmB,EAAEV,mBAFvB;AAGE,MAAA,cAAc,EAAEM;AAHlB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1EM;;GAAMhC,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport css from './App.module.css';\nimport { ContactList } from './ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(() => {\n    const stringifiedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(stringifiedContacts) ?? [];\n    return parsedContacts;\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const stringifiedContacts = JSON.stringify(contacts);\n    localStorage.setItem('contacts', stringifiedContacts);\n  }, [contacts]);\n\n  const handleAddContact = formData => {\n    const isInContact = contacts.some(\n      contact => contact.name.toLowerCase() === formData.name\n    );\n\n    if (isInContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: formData.name,\n      number: formData.number,\n      id: nanoid(),\n      favourite: false,\n    };\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleDeleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId)\n    );\n  };\n\n  const handleInputChange = event => {\n    setFilter(event.target.value);\n  };\n  const toggleFavorite = contactId => {\n    // [{id: 1, favourite: false}]\n\n    setContacts(\n      contacts.map(contact => {\n        if (contact.id === contactId) {\n          return { ...contact, favourite: !contact.favourite };\n        }\n        return contact;\n      })\n    );\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContactsByName = getVisibleContacts();\n\n  return (\n    <div className={css.phoneBook}>\n      <ContactForm handleAddContact={handleAddContact} />\n      <h2>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter filter={filter} handleInputChange={handleInputChange} />\n      <ContactList\n        contacts={filteredContactsByName}\n        handleDeleteContact={handleDeleteContact}\n        toggleFavorite={toggleFavorite}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}